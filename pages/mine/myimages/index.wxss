/* 
  Flex 布局
    是轴线布局，只能指定"项目"针对轴线的位置，可以看作是一维布局。
  Grid 布局
    是将容器划分成"行"和"列"，产生单元格，然后指定"项目所在"的单元格，可以看作是二维布局。
*/
/* 
  采用网格布局的区域，称为"容器"（container）。
  容器内部采用网格定位的子元素，称为"项目"（item） 
*/
/* 
  Grid 布局的属性分成两类。
  一类定义在容器上面，称为容器属性；
  另一类定义在项目上面，称为项目属性。
*/
  /* grid-template-columns属性定义每一列的列宽
     grid-template-rows属性定义每一行的行高 */
  /* 指定两列，自动宽度 */
  /* 行间距 列间距 */
  /* 是否自动补齐空白 "先行后列"，并且尽可能紧密填满，尽量不出现空格 */
  /* 浏览器自动创建的多余网格的列宽和行高。
  如果不指定这两个属性，浏览器完全根据单元格内容的大小，决定新增网格的列宽和行高。 */
/* .waterfall {
  display: grid;
  margin: 1%;
  grid-template-columns: repeat(2, 1fr);  
  grid-gap: 10rpx; 
  grid-auto-flow: row dense;
}
.waterfall .items{
  width: 100%;
}  */
/* 
grid-column属性是下面两个的合并简写形式 grid-column: <start-line> / <end-line>;
  grid-column-start属性：左边框所在的垂直网格线
  grid-column-end属性：右边框所在的垂直网格线
grid-row属性是下面两个的合并简写形式  grid-row: <start-line> / <end-line>;
  grid-row-start属性：上边框所在的水平网格线
  grid-row-end属性：下边框所在的水平网格线
*/
/* .waterfall .items {
  grid-row: auto / span 5;
} */

.box{
  display: grid;
  margin: 1%;
  grid-template-columns: repeat(2, 1fr);  
  grid-gap: 10rpx; 
}
.left{
  background-color: red;
  width: 375rpx;
  grid-column-start:0;
  grid-column-end:1;
  grid-row-start:0;
  grid-row-end:auto;
}
.right{
  background-color: blue;
  width: 375rpx;
  grid-column-start:1;
  grid-column-end:2;
  grid-row-start:0;
  grid-row-end:auto;
}
.img{
  width: 100%;
  height: 100rpx;
}
